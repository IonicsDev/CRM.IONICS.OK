@model Tuple<CRM.Business.Entities.Pedido, CRM.Business.Entities.PedidoDetalle>
@using GridMvc.Html;
@{
    Layout = "~/Views/Shared/_Generic.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("First")
    <div class="wrapper">

        <div class="container-fluid">
            <div id="heading" class="page-header">
                <h1><i class="icon20 i-cogs"></i>Configuración</h1>
            </div>

            <div class="row">

                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <div class="icon"><i class="icon20 i-table"></i></div>
                            <h4>Nuevo Pedido</h4>
                            <a href="#" class="minimize"></a>


                        </div>
                        <!-- End .panel-heading -->
                        <div class="panel-body">
                            <ul class="pager">
                                <li class="previous">
                                    <a href="@Url.Action("Index", "PedidoProceso")">← Volver</a>
                                </li>
                            </ul>
                            @Html.ValidationSummary(true)

                            <table cellspacing="0" border="0" class="table table-striped table-bordered table-hover">
                                <tr>
                                    <td>
                                        @Html.LabelFor(model => model.Item1.Nombre_Cliente, new { @class = "control-label" })
                                    </td>
                                    <td colspan="3">
                                        <div class="input-group" style="width:100%;">
                                            @Html.TextBoxFor(model => model.Item1.Nombre_Cliente, new { @readonly = "readonly", @class = "form-control" })
                                            @Html.HiddenFor(model => model.Item1.Cg_Cli, new { @class = "control-label" })
                                            @Html.HiddenFor(model => model.Item1.Cuit, new { @class = "control-label" })
                                            <span class="input-group-btn">
                                                @Html.ActionLink("Mostrar Clientes", "GetClientes", "PedidoProceso",
                                                          new { @id = "GetClientes", @style = "width: 350px;", @class = "modal-link btn btn-success" })
                                            </span>
                                        </div><!-- /input-group -->
                                        @Html.ValidationMessageFor(model => model.Item1.Cg_Cli)
                                        @Html.ValidationMessageFor(model => model.Item1.Cuit)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.LabelFor(model => model.Item2.NombreProducto, new { @class = "control-label" })
                                    </td>
                                    <td colspan="3">
                                        <div class="input-group" style="width:100%;">
                                            @Html.HiddenFor(model => model.Item2.Cg_Prod, new { @class = "control-label" })
                                            @Html.Hidden("EstadoProducto")
                                            @Html.TextBoxFor(model => model.Item2.NombreProducto, new { @readonly = "readonly", @class = "form-control" })
                                            <span class="input-group-btn">
                                                @Html.ActionLink("Mostrar Productos", "GetProductos", "PedidoProceso",
                                                          new { @id = "GetProductos", @style = "width: 350px;", @class = "modal-link btn btn-success", @disabled = "disabled" })
                                            </span>
                                        </div><!-- /input-group -->
                                        <span style="color: red;" class="field-validation-valid" id="validation_producto" data-valmsg-replace="true"></span>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="width: 8%;">@Html.LabelFor(model => model.Item2.Dosis, new { @class = "control-label" })</td>
                                    <td colspan="3">
                                        @Html.TextBoxFor(model => model.Item2.Dosis, new { @readonly = "readonly", @class = "form-control" })
                                        <span style="color: red;" class="field-validation-valid" id="validation_dosis" data-valmsg-replace="true"></span>
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Item2.Cantidad, new { @class = "control-label" })</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.Item2.Cantidad, new { @class = "form-control numericOnly" })
                                        <span style="color: red;" class="field-validation-valid" id="validation_cantidad" data-valmsg-replace="true"></span>
                                    </td>
                                    <td style="width:8%;">@Html.LabelFor(model => model.Item2.Unid_Fac, new { @class = "control-label" })</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.Item2.Unid_Fac, new { @readonly = "readonly", @class = "form-control" })
                                        <span style="color: red;" class="field-validation-valid" id="validation_unid_fac" data-valmsg-replace="true"></span>
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Item2.Lotes, new { @class = "control-label" })</td>
                                    <td colspan="3">
                                        @Html.TextBoxFor(model => model.Item2.Lotes, new { @class = "form-control", @maxlength = 100 })
                                    </td>
                                </tr>
                                <tr>
                                    <td style="width: 8%;">@Html.LabelFor(model => model.Item2.Orco, new { @class = "control-label" })</td>
                                    <td colspan="3">
                                        @Html.TextBoxFor(model => model.Item2.Orco, new { @class = "form-control", @maxlength = 10 })
                                        @Html.ValidationMessageFor(model => model.Item2.Orco)
                                    </td>
                                </tr>
                            </table>

                            <br />
                            <br />
                            <button id="AddProducto" type="button" class="btn btn-success pull-right col-lg-3">Agregar</button>
                            <br />
                            <br />
                            <!-- Modal -->
                            <div class="modal fade" id="myModal" role="dialog">
                                <div class="modal-dialog">
                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">Pedido @Model.Item1.Id</h4>
                                        </div>
                                        <div class="modal-body">
                                            <a style="text-align: center; font-weight: bold; margin: 0; font-family: 'Open Sans', sans-serif;"> No se puede agregar Producto.</a>
                                            <br/>
                                            <a style="text-align: center; font-weight: bold; margin: 0; font-family: 'Open Sans', sans-serif;"> La Autorización máxima por Pedido es de <strong>@Session["CantItem"]</strong> items.</a>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-danger btn-success" data-dismiss="modal">Aceptar</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @{Html.RenderPartial("_ListProductos", Model.Item1.PedidoDetalles.ToArray());}
                            <br />
                            <br />

                            <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-hover">
                                <tr>
                                    <td>@Html.LabelFor(model => model.Item1.Fe_Ped, new { @class = "control-label" })</td>
                                    <td>
                                        @Html.TextBoxFor(model => model.Item1.Fe_Ped, new { @class = "form-control datepickerTop" })
                                        @Html.ValidationMessageFor(model => model.Item1.Fe_Ped)
                                        @Html.ValidationMessage("FechaPedError")
                                    </td>
                                </tr>
                                @* Ese campo solo se visualizara si e rol del usuario es Admin *@
                                @if (((bool)Session["IsAdmin"]) == true)
                                {
                                    <tr>
                                        <td>@Html.LabelFor(model => model.Item1.Conf_Fecha, new { @class = "control-label" })</td>
                                        <td>
                                            @Html.TextBoxFor(model => model.Item1.Conf_Fecha, new { @class = "form-control datepickerTop" })
                                            @Html.ValidationMessage("FechaConfError")
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td>@Html.LabelFor(model => model.Item1.Observaciones, new { @class = "control-label" })</td>
                                    <td>
                                        @Html.TextAreaFor(model => model.Item1.Observaciones, new { @class = "form-control", @style = "resize: vertical;", @maxlength = 500 })
                                        @Html.ValidationMessageFor(model => model.Item1.Observaciones)
                                    </td>
                                </tr>
                            </table>

                            <div class="form-group relative">
                                <a href="@Url.Action("Index", "PedidoProceso")" class="btn btn-default col-lg-offset-7 col-lg-2">Cancelar</a>
                                <button id="btnGuardar" type="submit" class="btn btn-primary col-lg-3">Guardar</button>
                            </div>

                            <div id="clienteModal-container" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static">
                                <div class="modal-content"></div>
                            </div>

                            <div id="productoModal-container" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static">
                                <div class="modal-content"></div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section scripts
    {
    <link href="~/Css/custom.css" rel="stylesheet" />
    <script src="~/Scripts/clientGridFunctions.js"></script>
    <script type="text/javascript">
            //$(document).on('invalid-form.validate', 'form', function () {

            //    var button = $(this).find('input[type="submit"]');
            //    setTimeout(function () {
            //        button.removeAttr('disabled');
            //    }, 10000);
            //});

            $(document).on('submit', 'form', function () {
               // var button = $("#btnGuardar");

                $("#btnGuardar").attr('disabled', 'disabled');

            });

            //$(document).on('submit', 'form', function () {

            //    var button = $(this).find('input[type="submit"]');

            //        button.attr('disabled', 'disabled');

            //});

            $(document).ready(function () {

                $(function () {
                    var nombreCliente = $("input#Item1_Nombre_Cliente").val();
                    if (nombreCliente != "") {
                        $("a#GetProductos").removeAttr("disabled");
                    }
                });
                $('input#Item1_Fe_Ped').datepicker({
                    beforeShow: function (input, inst) {
                        inst.dpDiv.css({ marginTop: -input.offsetHeight + 'px', marginLeft: input.offsetWidth + 'px' });
                    }
                });
                $("input#Item1_Nombre_Cliente").on("change", function () {
                    $("a#GetProductos").removeAttr("disabled");
                });

                $(".numericOnly").keypress(function (e) {
                    e = window.event || e;
                    var charCode = e.charCode || e.keyCode || e.which;

                    if (String.fromCharCode(charCode).match(/[^0-9]/g)) return false;
                });

                $("a#GetProductos").on("click", function () {
                    var idCliente = $("input#Item1_Cg_Cli").val();
                    $(this).attr("href", "/PedidoProceso/GetProductos?CliID=" + idCliente + "");
                });


                $('button#AddProducto').on('click', function (e) {
                    var idCliente = $("input#Item1_Cg_Cli").val();
                    var nombreCliente = $("input#Item1_Nombre_Cliente").val();

                    var idProducto = $("input#Item2_Cg_Prod").val();
                    var nombreProducto = $("input#Item2_NombreProducto").val();

                    var cantidad = $("input#Item2_Cantidad").val();
                    var unidadFac = $("input#Item2_Unid_Fac").val();
                    var lotes = $("input#Item2_Lotes").val();
                    var ocCliente = $("input#Item2_Orco").val();
                    var Dosis = $("input#Item2_Dosis").val();

                    var rowCount = $('#productos >tr').length;
                    var cantItem = GetParamCantidadItems();



                    if (validate_producto()) {
                        var flag = producto_exist();

                        if (flag == true) {
                            var $rows = $("tbody#productos");

                            $rows.children().each(function (i, tr) {
                                $(tr).each(function (i, td) {
                                    var idProductoTabla = $(td).children().children(".Cg_Prod").val();
                                    var rowDeleted = $(td).children().children(".Deleted").val();

                                    if ((idProducto == idProductoTabla) && (rowDeleted == "false")) {
                                        $(td).children().children(".Cantidad").val(cantidad);
                                        $(td).children().children(".UnidadFac").val(unidadFac);
                                        $(td).children().children(".Lotes").val(lotes);
                                        $(td).children().children(".Orco").val(ocCliente);
                                        $(td).children().children(".DosisMinima").val(Dosis);

                                        LimpiarControles();
                                    }
                                });
                            });
                        }
                        else {

                            if (rowCount == cantItem) {
                                $("#myModal").modal('show');
                                LimpiarControles();
                                return;
                            }

                            var tr = "<tr><td style='vertical-align: middle;'>" +
                                    "<input class='form-control Cg_Prod' type='hidden' name='[" + rowCount + "].Cg_Prod' value='" + idProducto + "' />" +
                                    "<input class='form-control NombreProducto' type='text' readonly='readonly' name='[" + rowCount + "].NombreProducto' value='" + nombreProducto + "' />" +
                                "</td>" +
                                "<td style='vertical-align: middle;'>" +
                                "<input class='form-control Dosis' type='text' readonly='readonly' name='[" + rowCount + "].Dosis' value='" + Dosis + "' />" +
                                "</td>" +
                                "<td style='vertical-align: middle;'>" +
                                    "<input class='form-control Cantidad' type='text' readonly='readonly' name='[" + rowCount + "].Cantidad' value='" + cantidad + "' />" +
                                "</td>" +
                                "<td style='vertical-align: middle;'>" +
                                    "<input class='form-control UnidadFac' type='text' readonly='readonly' name='[" + rowCount + "].Unid_Fac' value='" + unidadFac + "' />" +
                                "</td>" +
                                "<td style='vertical-align: middle;'>" +
                                    "<input class='form-control Lotes' type='text' readonly='readonly' name='[" + rowCount + "].Lotes' value='"+ lotes +"' />" +
                                "</td>" +
                                "<td style='vertical-align: middle;'>" +
                                    "<input class='form-control Orco' type='text' readonly='readonly' name='[" + rowCount + "].Orco' value='"+ ocCliente +"' />" +
                                "</td>" +
                                "<td class='tdDeleted' style='text-align: center; vertical-align: middle; width: 10%;'>" +
                                    "<input class='form-control Deleted' type='hidden' name='[" + rowCount + "].Deleted' value='false'>" +
                                    "<a href='#' class='ModifyProducto'><i class='i-pencil-5' title='Modificar'></i></a>" + "<span>  |  </span>" +
                                    "<a href='#' class='DeleteProducto'><i class='i-remove-7' title='Eliminar'></i></a>" +
                                "</td></tr>";

                            $("tbody#productos").append(tr);
                        }

                        LimpiarControles();
                    }

                    if (unidadFac == "") {
                        alert("Ha ocurrido un error. Por favor Seleccione nuevamente el producto.");
                    }
                });

                function GetParamCantidadItems() {
                    var cantItem = '@Session["CantItem"]';
                    return cantItem;
                }

                function LimpiarControles() {
                    $("input#Item2_NombreProducto").val("");
                    $("input#Item2_Cantidad").val("0");
                    $("input#Item2_Unid_Fac").val("");
                    $("input#Item2_Lotes").val("");
                    $("input#Item2_Orco").val("");
                    $("input#Item2_Dosis").val("");
                    $("input#EstadoProducto").val("");
                }

                function validate_producto()
                {
                    var nombreProducto = $("input#Item2_NombreProducto").val();
                    var dosis = $("input#Item2_Dosis").val();
                    var unid_fac = $("input#Item2_Unid_Fac").val();
                    var cantidad = $("input#Item2_Cantidad").val();
                    var rowCount = $('#productos >tr').length;
                    var cantItem = '@Session["CantItem"]';
                    var flag = true;

                    //if (rowCount == cantItem) {
                    //    alert("No se pueden agregar mas Items.\nMaximo " + cantItem + " items por Pedido");
                    //    flag = false;
                    //}

                    if (nombreProducto == "") {
                        $("span#validation_producto").text("El Producto es requerido");
                        flag = false;
                    }
                    else {
                        $("span#validation_producto").text("");
                    }

                    if (dosis == "") {
                        $("span#validation_dosis").text("La Dosis es requerida");
                        flag = false;
                    }
                    else {
                        $("span#validation_dosis").text("");
                    }


                    if (cantidad == "") {
                        $("span#validation_cantidad").text("La cantidad es requerida");
                        flag = false;
                    }
                    else {
                        $("span#validation_cantidad").text("");
                    }


                    if (parseInt(cantidad) < 1) {
                        $("span#validation_cantidad").text("La cantidad debe ser mayor a cero");
                        flag = false;
                    }
                    else {
                        $("span#validation_cantidad").text("");
                    }

                    if (unid_fac == "") {
                        $("span#validation_unid_fac").text("La Unidad es requerida");
                        flag = false;
                    }
                    else {
                        $("span#validation_unid_fac").text("");
                    }


                    if (flag == false)
                        return false;

                    return true;
                }
            });

            function producto_exist()
            {
                var exists = false;
                var idProducto = $("input#Item2_Cg_Prod").val();
                var $rows = $("tbody#productos");

                $rows.children().each(function (i, tr) {
                    $(tr).each(function (i, td) {
                        var idProductoTabla = $(td).children().children(".Cg_Prod").val();
                        var rowDeleted = $(td).children().children(".Deleted").val();

                        if ((idProducto == idProductoTabla) && (rowDeleted == "false")) {
                            exists = true;
                        }
                    });
                });

                return exists;
            }

            $(function () {
                $('body').on('click', '#GetClientes.modal-link', function (e) {
                    e.preventDefault();
                    //Optional: turn the chache off
                    $.ajaxSetup({ cache: false });
                    $(this).attr('data-target', '#clienteModal-container');
                    $(this).attr('data-toggle', 'modal');
                });

                $('body').on('click', '#GetProductos.modal-link', function (e) {
                    e.preventDefault();
                    //Optional: turn the chache off
                    $.ajaxSetup({ cache: false });
                    $(this).attr('data-target', '#productoModal-container');
                    $(this).attr('data-toggle', 'modal');
                });

                $('#productoModal-container').on('hidden.CRM.modal', function () {
                    $(this).removeData('CRM.modal');
                });

                $('#clienteModal-container').on('hidden.CRM.modal', function () {
                    $(this).removeData('CRM.modal');
                });

                $('#CancelModal').on('click', function () {
                    return false;
                });
            });

    </script>
}
