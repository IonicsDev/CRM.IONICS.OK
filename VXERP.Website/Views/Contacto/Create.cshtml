@model CRM.Business.Entities.Contacto
@using GridMvc.Html;
@{
    Layout = "~/Views/Shared/_Generic.cshtml";
}
@using (Html.BeginForm("Create", "Contacto", FormMethod.Post, new { enctype = "multipart/form-data", @runat="server" }))
{
    @Html.AntiForgeryToken()
 
    <div class="wrapper">

        <div class="container-fluid">
            <div id="heading" class="page-header">
                <h1><i class="icon20 i-cogs"></i>Configuración</h1>
            </div>

            <div class="row">

                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <div class="icon"><i class="icon20 i-table"></i></div>
                            <h4>Nuevo Contacto</h4>
                            <a href="#" class="minimize"></a>


                        </div>
                        <!-- End .panel-heading -->
                        <div class="panel-body">
                            <ul class="pager">
                                <li class="previous">
                                    <a href="@Url.Action("Index", "Contacto")">← Volver</a>
                                </li>
                            </ul>
                            @Html.ValidationSummary(true)
                            
                            <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-hover">
                                <tr>
                                    <td>@Html.LabelFor(model => model.CodigoCliente, new { @class = "control-label" })</td>
                                    <td>@Html.DropDownListFor(model => model.CodigoCliente, new SelectList(ViewBag.Clientes, "key", "value")
                                            , "Seleccione", new { @class="select2"})
                                        @Html.ValidationMessageFor(model => model.CodigoCliente)
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Nombre, new { @class = "control-label" })</td>
                                    <td>@Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @maxlength = "50" })
                                        @Html.ValidationMessageFor(model => model.Nombre)
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Apellido, new { @class = "control-label" })</td>
                                    <td>@Html.TextBoxFor(model => model.Apellido, new { @class = "form-control", @maxlength = "50" })
                                        @Html.ValidationMessageFor(model => model.Apellido)
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Cargo, new { @class = "control-label" })</td>
                                    <td>@Html.TextBoxFor(model => model.Cargo, new { @class = "form-control", @maxlength = "50" })
                                        @Html.ValidationMessageFor(model => model.Cargo)
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Telefono, new { @class = "control-label" })</td>
                                    <td>@Html.TextBoxFor(model => model.Telefono, new { @class = "form-control cellphone", @maxlength = "20" })
                                        @Html.ValidationMessageFor(model => model.Telefono)
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Interno, new { @class = "control-label" })</td>
                                    <td>@Html.TextBoxFor(model => model.Interno, new { @class = "form-control numeric", @maxlength = "5" })
                                        @Html.ValidationMessageFor(model => model.Interno)
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Movil, new { @class = "control-label" })</td>
                                    <td>@Html.TextBoxFor(model => model.Movil, new { @class = "form-control cellphone", @maxlength = "20" })
                                        @Html.ValidationMessageFor(model => model.Movil)
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Email, new { @class = "control-label" })</td>
                                    <td>@Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Email)
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Dni, new { @class = "control-label" })</td>
                                    <td>@Html.TextBoxFor(model => model.Dni, new { @class = "form-control numeric", @maxlength = "9" })
                                        @Html.ValidationMessageFor(model => model.Dni)
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(model => model.Foto, new { @class = "control-label" })</td>
                                    <td>
                                        @Html.HiddenFor(model => model.FotoByte)
                                        @if (Model.FotoByte != null)
                                        {
                                            <div style="margin-bottom: 8px;" id="ShowFoto">
                                                @{
                                                MemoryStream ms = new MemoryStream((byte[])Model.FotoByte);
                                                System.Drawing.Image image = System.Drawing.Image.FromStream(ms);

                                                System.Drawing.Imaging.ImageFormat format = image.RawFormat;
                                                System.Drawing.Imaging.ImageCodecInfo codec = System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders().First(c => c.FormatID == format.Guid);
                                                string mimeType = codec.MimeType;

                                                string base64String = Convert.ToBase64String((byte[])Model.FotoByte);
                                                    <img class="PutImage" src="@String.Format("data:" + mimeType + ";base64,{0}", base64String)" />
                                                }
                                            </div>
                                            }
                                        else
                                        {
                                            <div style="margin-bottom: 8px;" id="ShowFoto">
                                                <img class="PutImage" src="#" style="display: none;" />
                                            </div>
                                        }
                                        <div>@Html.TextBoxFor(model => model.Foto, new { @type = "file", @accept = "image/*", @onchange = "readURL(this);" })</div>
                                        <div>@Html.ValidationMessage("ErrorImage")</div>
                                    </td>
                                </tr>
                                
                            </table>

                            <br />

                            @{Html.RenderPartial("_ListArchivos", Model.ArchivosModulo);}
    
                            @Html.ActionLink("Adjuntar Archivo", "AddArchivoModulo", "Contacto", new { @id = "AddArchivoModulo", @class = "modal-link btn btn-success pull-right col-lg-3" })

                            <br />
                            <br />
                            <br />
                            <br />

                            <div class="form-group relative">
                                <button id="btnGuardar" type="submit" class="btn btn-primary pull-right col-lg-5">Guardar</button>
                            </div>

                            <div id="modal-container" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static">
                                <div class="modal-content"></div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    
    @section scripts
    {
        <script type="text/javascript">
            $(document).ready(function () {
                $(function () {
                    $('body').on('click', '#AddArchivoModulo.modal-link', function (e) {
                        e.preventDefault();
                        //Optional: turn the chache off
                        $.ajaxSetup({ cache: false });
                        $(this).attr('data-target', '#modal-container');
                        $(this).attr('data-toggle', 'modal');
                    });

                    $('#modal-container').on('hidden.CRM.modal', function () {
                        $(this).removeData('CRM.modal');
                    });

                    $('#CancelModal').on('click', function () {
                        return false;
                    });
                });
            });

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('img.PutImage').attr('src', e.target.result);
                        $('img.PutImage').css('display', '');
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

        </script>
    }
}