@Html.DevExpress().GridView(settings => {
    settings.Name = "grid";
    settings.CallbackRouteValues = new { Controller = "Home", Action = "FixedGroupsPartial" };
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.SettingsSearchPanel.Visible = true;
    settings.SettingsBehavior.AllowFixedGroups = true;
    settings.SettingsBehavior.AllowDragDrop = true;
    settings.SettingsBehavior.AllowSort = true;

    settings.SettingsCookies.StoreFiltering = true;
    settings.SettingsCookies.StoreGroupingAndSorting = true;
    settings.SettingsCookies.StorePaging = true;
    settings.SettingsCookies.Enabled = true;
    settings.CustomJSProperties = (s, e) =>
    {   
        MVCxGridView gridView = (MVCxGridView)s;
        e.Properties["cpClientLayout"] = gridView.SaveClientLayout();
    };

    //settings.ClientLayout = (s, e) =>
    //{
    //    switch (e.LayoutMode)
    //    {
    //        case ClientLayoutMode.Loading:
    //            //Load Last ClientLayout Via First Load
    //            if (Session["Layout"] != null)
    //            {
    //                e.LayoutData = Session["Layout"].ToString();
    //            }
    //            break;
    //        case ClientLayoutMode.Saving:
    //            //Save Last ClientLayout Automatically
    //            Session["Layout"] = e.LayoutData;
    //            break;
    //    }
    //};

    settings.CommandColumn.Visible = true;
    settings.Settings.UseFixedTableLayout = true;
    settings.CommandColumn.Width = 50;
    
    settings.CommandColumn.ShowClearFilterButton = true;
    //CheckBox en cada fila y checkbox general
    settings.CommandColumn.ShowSelectCheckbox = true;
    settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.Page;
    settings.CommandColumn.HeaderStyle.BackColor = System.Drawing.Color.Orange;
    
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
   
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
    settings.Settings.VerticalScrollableHeight = 300;
    
    settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };

    settings.KeyFieldName = "Id";

    settings.Columns.Add(column =>
    {
        column.FieldName = "NombreApellido";
        column.Caption = "Nombre y Apellido";
        column.HeaderStyle.BackColor = System.Drawing.Color.Orange;
        column.HeaderStyle.Font.Bold = true;
        /*column.Width = System.Web.UI.WebControls.Unit.Pixel(100);*/
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "UserName";
        column.Caption = "Usuario";
        column.HeaderStyle.BackColor = System.Drawing.Color.Orange/*.FromArgb(255,165,0)*//*Mas suave = .FromArgb(255,187,60)*/;
        column.HeaderStyle.Font.Bold = true;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Recordarme";
        column.Caption = "Recordarme";
        column.HeaderStyle.BackColor = System.Drawing.Color.Orange;
        column.HeaderStyle.Font.Bold = true;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DescripcionEstado";
        column.Caption = "Estado";
        column.HeaderStyle.BackColor = System.Drawing.Color.Orange;
        column.GroupIndex = 0;
        column.HeaderStyle.Font.Bold = true;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "Acciones";
        column.Caption = "Acciones";
        column.HeaderStyle.BackColor = System.Drawing.Color.Orange;
        column.HeaderStyle.Font.Bold = true;
        column.SetDataItemTemplateContent(c =>
        {
            if (DataBinder.Eval(c.DataItem, "Estado").ToString() == true.ToString())
            {
                ViewContext.Writer.Write(
                Html.ActionLink(" ", "View", "Home", new { Id = DataBinder.Eval(c.DataItem, "Id") }, new { @class = " i-eye ", title = "Ver" }) + "&nbsp;|&nbsp;" +
                Html.ActionLink(" ", "Edit", "Home", new { Id = DataBinder.Eval(c.DataItem, "Id") }, new { @class = " i-pencil-5 ", title = "Editar" }) + "&nbsp;|&nbsp;" +
                Html.ActionLink(" ", "Delete", "Home", new { Id = DataBinder.Eval(c.DataItem, "Id") },
                    new { Class = "confirm i-close-4", title = "Baja" })
                );
            }
            else
            {
                ViewContext.Writer.Write(
                Html.ActionLink(" ", "View", "Home", new { Id = DataBinder.Eval(c.DataItem, "Id") }, new { @class = " i-eye ", title = "Ver" }) + "&nbsp;|&nbsp;" +
                Html.ActionLink(" ", "Edit", "Home", new { Id = DataBinder.Eval(c.DataItem, "Id") }, new { @class = " i-pencil-5 ", title = "Editar" }) + "&nbsp;|&nbsp;" +
                Html.ActionLink(" ", "Delete", "Home", new { Id = DataBinder.Eval(c.DataItem, "Id") }, new { @class = "confirm  i-loop ", title = "Restablecer" })
                );
            }
        });
    });
    
    //Fila de filtros
    settings.Settings.ShowFilterRow = true;
    //Icono del menu del filtrado
    settings.Settings.ShowFilterRowMenu = false;

    //Setear por defecto la condicion de filtrado
    //de todas las columnas a Contains
    settings.DataBound = (sender, e) =>
        {
            MVCxGridView gv = sender as MVCxGridView;
            gv.Visible = (gv.VisibleRowCount > 0);

            foreach (GridViewColumn column in gv.Columns)
            {
                var dataColumn = column as GridViewDataColumn;
                if (dataColumn != null)
                    dataColumn.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            }
        };

    
    settings.PreRender = (s, e) => {
        MVCxGridView grid = s as MVCxGridView;
        if(grid != null)
            grid.ExpandAll();
    };

    settings.SettingsDetail.ExportMode = GridViewDetailExportMode.Expanded;

}).Bind(Model).GetHtml()

@* El estilo de la grilla se edita en el Global.asax *@